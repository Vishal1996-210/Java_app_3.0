apt-get update -y
//apt-get install openjdk-11-jre-headless -y
apt-get install openjdk-17-jdk -y
java --version //openjdk 17.0.12

apt-get update -y
apt-get install git -y
git --version //git version 2.43.0

apt-get update -y
apt-get install maven -y
mvn --version //Apache Maven 3.8.7

apt-get update -y
apt-get install docker.io -y
docker --version //Docker version 24.0.7
chmod 777 /var/run/docker.sock
systemctl status docker
systemctl start docker
systemctl enable docker

docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube
docker ps // check whether the conatiner is up and running or not
docker start <Container ID> // Start the container if container is not up and running
http://<EC2_PUBLIC _IP>:9000/ // Login into sonar dashboard with username(admin) & password(admin)
Sonar Dashboard -> MyAccount -> Security -> Give any token name and select type as Global Analysis Token -> Generate -> Save the token to some text file // Create token for Jenkins
Sonar Dashboard -> Administration -> Configuration -> webhooks -> create -> Give any name and url(http://<EC2_IP>:8080/sonarqube-webhook/) -> create // Integrate Sonar to Jenkins

apt-get update -y
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
apt-get update -y
apt-get install jenkins -y
jenkins --version //2.462.2
systemctl status jenkins
http://<EC2_PUBLIC _IP>:8080/
Dashboard -> Manage Jenkins -> Plugins -> Available plugins // Sonar Gerrit, Sonar Quality Gates, SonarQube Scanner, SonarQube Generic Coverage, Quality Gates, Artifactory & Jfrog
Dashboard -> New Item -> Give any Item name -> Select pipeline -> Ok // Create Pipeline
  1) Go to Pipeline
  2) Select defination as pipeline script from SCM
  3) Select SCM as Git
  4) Enter GIT repository URL
  5) Enter branch name master/main (As per GitHub Branch)
  6) Enter script path as Jenkinsfile(as per the file name available in GitHub)
  7) Save
Jenkins Dashboard -> Manage Jenkins -> system -> SonarQube installations // Integrate Sonarqube with Jenkins
  1) Click on add sonarqube
  2) Enter name as sonar-api
  3) Enter server URL as http://<EC2_PUBLIC _IP>:9000
  4) Select Server authentication token as sonarqube-api
      1) Click on Add -> Jenkins
      2) Select domain as Global credentials(unrestricted)
      3) Select kind as secret text
      4) Select scope as global
      5) Paste the sonarqube token in secret
      6) Enter ID as sonarqube-api
  5) Save
Dashboard -> Manage Jenkins -> Credentials -> System -> Global credentials (unrestricted) - add credential // Add docker HUB credentials in Jenkins
  1) Select kind as Username with password
  2) Select scope as global
  3) Enter dockerhub username
  4) Enter dockerhub password
  5) Enter ID as docker
  6) Create
Jenkins Dashboard -> Manage Jenkins -> System -> Global Untrusted Pipeline Libraries // Add Jenkins Shared library in Jenkins
  1) Click on Add
  2) Enter name as my-shared-library (As per Jenkinsfile)
  3) Enter default version as main (As per GitHub Branch)
  4) Enter project repository as https://github.com/Vishal1996-210/jenkins_shared_lib.git
  5) Save

//Assign administration privileges to jenkins user
vi /etc/sudoers
jenkins ALL=(ALL) NOPASSWD: ALL // Add the following line at the end of the file
su - jenkins // Now we can use Jenkins as root user
pwd // /var/lib/jenkins

//Install and Setup AWS
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
sudo apt-get install unzip
unzip awscliv2.zip
sudo ./aws/install --update
aws â€“version // aws-cli-2.17.61

//EKSCTL INSTALLATION
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
eksctl version // 0.191.0

In the upper right corner of the console, choose your account name or number and then choose Security Credentials. In the Access keys section, choose Create access key

